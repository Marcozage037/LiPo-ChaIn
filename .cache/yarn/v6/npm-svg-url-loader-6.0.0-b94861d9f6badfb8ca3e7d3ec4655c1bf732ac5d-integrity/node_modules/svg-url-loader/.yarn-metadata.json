{
  "manifest": {
    "name": "svg-url-loader",
    "version": "6.0.0",
    "description": "Converts SVG file to utf-8 encoded data-uri string",
    "main": "./index.js",
    "scripts": {
      "test": "jest --coverage",
      "test-watch": "jest --watch",
      "coverage": "cat coverage/*/lcov.info | codecov"
    },
    "dependencies": {
      "file-loader": "~6.0.0",
      "loader-utils": "~2.0.0"
    },
    "peerDependencies": {
      "webpack": "^4.0.0 || ^5.0.0"
    },
    "repository": {
      "type": "git",
      "url": "git+https://github.com/bhovhannes/svg-url-loader.git"
    },
    "keywords": [
      "data-uri",
      "encoding",
      "loader",
      "svg",
      "url-loader",
      "utf8",
      "webpack"
    ],
    "author": {
      "name": "Hovhannes Babayan"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/bhovhannes/svg-url-loader/issues"
    },
    "homepage": "https://github.com/bhovhannes/svg-url-loader#readme",
    "devDependencies": {
      "codecov": "3.7.0",
      "css-loader": "3.5.3",
      "jest": "26.0.1",
      "less": "3.11.1",
      "less-loader": "6.1.0",
      "node-sass": "4.14.1",
      "sass-loader": "8.0.2",
      "webpack": "4.43.0"
    },
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v6/npm-svg-url-loader-6.0.0-b94861d9f6badfb8ca3e7d3ec4655c1bf732ac5d-integrity/node_modules/svg-url-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "# svg-url-loader\n[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][npm-url] [![Dependencies][deps-image]][deps-url] [![Dev. Dependencies][dev-deps-image]][dev-deps-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n\nA webpack loader which loads SVG file as utf-8 encoded DataUrl string.\n\nExisting [`url-loader`](https://github.com/webpack-contrib/url-loader) always does Base64 encoding for data-uri.  As SVG content is a human-readable xml string, using base64 encoding is not mandatory.  Instead, one may only escape [unsafe characters](http://www.ietf.org/rfc/rfc1738.txt) and replace `\"` with `'` as described [in this article](http://codepen.io/Tigt/post/optimizing-svgs-in-data-uris).\n\nThere are some benefits for choosing utf-8 encoding over base64.\n1. Resulting string is shorter (can be ~2 times shorter for 2K-sized icons);\n2. Resulting string will be compressed better when using gzip compression;\n3. Browser parses utf-8 encoded string faster than its base64 equivalent.\n\n## Supported parameters\n\nParameters can be passed both in an url or from webpack config file. See [Loaders](https://webpack.js.org/concepts/loaders/) section in webpack documentation for more details.\n\nThe loader supports the following parameters:\n\n### `limit`\n\nIf given, loader will not encode the source file if its content is greater than this limit.\nDefaults to no limit.\nIf the file is greater than the limit the [`file-loader`](https://github.com/webpack-contrib/file-loader) is used, receiving all query parameters set for svg-url-loader.\n\n``` javascript\nrequire('svg-url-loader?limit=1024!./file.svg');\n// => DataUrl if \"file.png\" is smaller that 1kb\n\nrequire('svg-url-loader?prefix=img/!./file.svg');\n// => Parameters for the file-loader are valid too\n//    They are passed to the file-loader if used.\n```\n\n### `stripdeclarations`\n\nThis option is true by default. **It will be removed in the next major release.**  \nSee [this issue](https://github.com/bhovhannes/svg-url-loader/issues/104#issuecomment-348377933) for more context about this decision.\n\nIf given will tell the loader to strip out any XML declaration, e.g. `<?xml version=\"1.0\" encoding=\"UTF-8\"?>` at the beginning of imported SVGs.\nInternet Explorer (tested in Edge 14) cannot handle XML declarations in CSS data URLs (`content: url(\"data:image/svg...\")`).\n\n``` javascript\nrequire('svg-url-loader?stripdeclarations!./file.svg');\n```\n\n### `iesafe`\n\nThis option falls back to the file-loader if the file contains a style-element and the encoded size is above 4kB no matter the `limit` specified.\n\nInternet Explorer (including IE11) stops parsing style-elements in SVG data-URIs longer than 4kB. This results in black fill-color for all styled shapes.\n\n``` javascript\nrequire('svg-url-loader?iesafe!./file.svg');\n```\n\n### `encoding`\n\nThis option controls which encoding to use when constructing a data-URI for an SVG. When set to a non-\"none\" value, loader does not apply quotes to the resulting data-URI. \n\nPossible values are \"base64\" and \"none\". Defaults to \"none\".\n\n``` javascript\nrequire('svg-url-loader?encoding=base64!./file.svg');\n```\n\n## Usage\n\n[Documentation: Loaders](https://webpack.js.org/concepts/loaders/)\n\n### In JS:\n``` javascript\nrequire('svg-url-loader!./file.svg');\n// => DataUrl for file.svg\n```\n\n### In CSS (with webpack.config.js below):\n``` css\n.icon {\n  background: url('../images/file.svg');\n}\n```\n``` javascript\nmodule.exports = {\n  //...\n  module: {\n    rules: [\n      {\n        test: /\\.svg/,\n        use: {\n          loader: 'svg-url-loader',\n          options: {}\n        }\n      }\n    ]\n  },\n  //...\n};\n```\n\n## Benefits of using data-uri\n\n1. Browser won't make an extra http call to download the image\n2. Some folks [mentioned](https://github.com/bhovhannes/svg-url-loader/issues/341) that even if image is in browser cache images with data url appear on screen faster.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n\n[deps-image]: https://img.shields.io/david/bhovhannes/svg-url-loader.svg?style=flat-square\n[deps-url]: https://david-dm.org/bhovhannes/svg-url-loader\n\n[dev-deps-image]: https://img.shields.io/david/dev/bhovhannes/svg-url-loader.svg?style=flat-square\n[dev-deps-url]: https://david-dm.org/bhovhannes/svg-url-loader#info=devDependencies\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n[license-url]: LICENSE\n\n[npm-url]: https://www.npmjs.org/package/svg-url-loader\n[npm-version-image]: https://img.shields.io/npm/v/svg-url-loader.svg?style=flat-square\n[npm-downloads-image]: https://img.shields.io/npm/dm/svg-url-loader.svg?style=flat-square\n\n[travis-url]: https://travis-ci.com/bhovhannes/svg-url-loader\n[travis-image]: https://img.shields.io/travis/bhovhannes/svg-url-loader.svg?style=flat-square\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Hovhannes Babayan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/svg-url-loader/-/svg-url-loader-6.0.0.tgz#b94861d9f6badfb8ca3e7d3ec4655c1bf732ac5d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/svg-url-loader/-/svg-url-loader-6.0.0.tgz",
    "hash": "b94861d9f6badfb8ca3e7d3ec4655c1bf732ac5d",
    "integrity": "sha512-Qr5SCKxyxKcRnvnVrO3iQj9EX/v40UiGEMshgegzV7vpo3yc+HexELOdtWcA3MKjL8IyZZ1zOdcILmDEa/8JJQ==",
    "registry": "npm",
    "packageName": "svg-url-loader",
    "cacheIntegrity": "sha512-Qr5SCKxyxKcRnvnVrO3iQj9EX/v40UiGEMshgegzV7vpo3yc+HexELOdtWcA3MKjL8IyZZ1zOdcILmDEa/8JJQ== sha1-uUhh2fa637jKPn0+xGVcG/cyrF0="
  },
  "registry": "npm",
  "hash": "b94861d9f6badfb8ca3e7d3ec4655c1bf732ac5d"
}