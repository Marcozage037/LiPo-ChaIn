{
  "manifest": {
    "name": "http-status-codes",
    "version": "1.4.0",
    "description": "Constants enumerating the HTTP status codes. Based on the Java Apache HttpStatus API.",
    "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/prettymuchbryce/node-http-status.git"
    },
    "main": "./index.js",
    "keywords": [
      "node",
      "http",
      "apache",
      "HttpStatus",
      "httpclient",
      "status",
      "codes"
    ],
    "author": {
      "name": "Bryce Neal"
    },
    "license": "MIT",
    "typings": "index.d.ts",
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v6/npm-http-status-codes-1.4.0-6e4c15d16ff3a9e2df03b89f3a55e1aae05fb477-integrity/node_modules/http-status-codes/package.json",
    "readmeFilename": "README.md",
    "readme": "# http-status-codes\n\nConstants enumerating the HTTP status codes. Based on the [Java Apache HttpStatus API](http://hc.apache.org/httpclient-3.x/apidocs/org/apache/commons/httpclient/HttpStatus.html).\n\nAll status codes defined in RFC1945 (HTTP/1.0), RFC2616 (HTTP/1.1), RFC2518 (WebDAV), RFC6585 (Additional HTTP Status Codes), and RFC7538 (Permanent Redirect) are supported.\n\nCompletely library agnostic. No dependencies.\n\n## Installation\n\n```console\nnpm install http-status-codes --save\n```\n\n## Usage (express 4.x)\n\n```javascript\nvar HttpStatus = require('http-status-codes');\n\nresponse\n\t.status(HttpStatus.OK)\n\t.send('ok');\n\nresponse\n\t.status(HttpStatus.INTERNAL_SERVER_ERROR)\n\t.send({\n\t\terror: HttpStatus.getStatusText(HttpStatus.INTERNAL_SERVER_ERROR)\n\t});\n\nresponse\n\t.status(HttpStatus.getStatusCode('Server Error'))\n\t.send({\n\t\terror: 'Server Error'\n\t});\n```\n\n## Codes\n\nConstant                            | Code  | Status Text\n------------------------------------|-------|-----------------------------------\nACCEPTED                            | 202   | Accepted\nBAD_GATEWAY                         | 502   | Bad Gateway\nBAD_REQUEST                         | 400   | Bad Request\nCONFLICT                            | 409   | Conflict\nCONTINUE                            | 100   | Continue\nCREATED                             | 201   | Created\nEXPECTATION_FAILED                  | 417   | Expectation Failed\nFAILED_DEPENDENCY                   | 424   | Failed Dependency\nFORBIDDEN                           | 403   | Forbidden\nGATEWAY_TIMEOUT                     | 504   | Gateway Timeout\nGONE                                | 410   | Gone\nHTTP_VERSION_NOT_SUPPORTED          | 505   | HTTP Version Not Supported\nIM_A_TEAPOT                         | 418   | I'm a teapot\nINSUFFICIENT_SPACE_ON_RESOURCE      | 419   | Insufficient Space on Resource\nINSUFFICIENT_STORAGE                | 507   | Insufficient Storage\nINTERNAL_SERVER_ERROR               | 500   | Server Error\nLENGTH_REQUIRED                     | 411   | Length Required\nLOCKED                              | 423   | Locked\nMETHOD_FAILURE                      | 420   | Method Failure\nMETHOD_NOT_ALLOWED                  | 405   | Method Not Allowed\nMOVED_PERMANENTLY                   | 301   | Moved Permanently\nMOVED_TEMPORARILY                   | 302   | Moved Temporarily\nMULTI_STATUS                        | 207   | Multi-Status\nMULTIPLE_CHOICES                    | 300   | Multiple Choices\nNETWORK_AUTHENTICATION_REQUIRED     | 511   | Network Authentication Required\nNO_CONTENT                          | 204   | No Content\nNON_AUTHORITATIVE_INFORMATION       | 203   | Non Authoritative Information\nNOT_ACCEPTABLE                      | 406   | Not Acceptable\nNOT_FOUND                           | 404   | Not Found\nNOT_IMPLEMENTED                     | 501   | Not Implemented\nNOT_MODIFIED                        | 304   | Not Modified\nOK                                  | 200   | OK\nPARTIAL_CONTENT                     | 206   | Partial Content\nPAYMENT_REQUIRED                    | 402   | Payment Required\nPERMANENT_REDIRECT                  | 308   | Permanent Redirect\nPRECONDITION_FAILED                 | 412   | Precondition Failed\nPRECONDITION_REQUIRED               | 428   | Precondition Required\nPROCESSING                          | 102   | Processing\nPROXY_AUTHENTICATION_REQUIRED       | 407   | Proxy Authentication Required\nREQUEST_HEADER_FIELDS_TOO_LARGE     | 431   | Request Header Fields Too Large\nREQUEST_TIMEOUT                     | 408   | Request Timeout\nREQUEST_TOO_LONG                    | 413   | Request Entity Too Large\nREQUEST_URI_TOO_LONG                | 414   | Request-URI Too Long\nREQUESTED_RANGE_NOT_SATISFIABLE     | 416   | Requested Range Not Satisfiable\nRESET_CONTENT                       | 205   | Reset Content\nSEE_OTHER                           | 303   | See Other\nSERVICE_UNAVAILABLE                 | 503   | Service Unavailable\nSWITCHING_PROTOCOLS                 | 101   | Switching Protocols\nTEMPORARY_REDIRECT                  | 307   | Temporary Redirect\nTOO_MANY_REQUESTS                   | 429   | Too Many Requests\nUNAUTHORIZED                        | 401   | Unauthorized\nUNPROCESSABLE_ENTITY                | 422   | Unprocessable Entity\nUNSUPPORTED_MEDIA_TYPE              | 415   | Unsupported Media Type\nUSE_PROXY                           | 305   | Use Proxy\n\n## TypeScript\n\nThere is an included definition file that adds rules for use, comments, and links to official documentation.\n\n### Usage\n\nOption 1: Full import of package\n\n```typescript\nimport * as HttpStatus from 'http-status-codes'\n\nresponse\n\t.status(HttpStatus.OK)\n\t.send('ok')\n\nresponse\n\t.status(HttpStatus.INTERNAL_SERVER_ERROR)\n\t.send({\n\t\terror: HttpStatus.getStatusText(HttpStatus.INTERNAL_SERVER_ERROR)\n\t})\n\nresponse\n\t.status(HttpStatus.getStatusCode('Server Error'))\n\t.send({\n\t\terror: 'Server Error'\n\t})\n```\n\nOption 2: Selective import\n\n```typescript\nimport { OK, getStatusText, getStatusCode } from 'http-status-codes'\n\nresponse\n\t.status(OK)\n\t.send(getStatusText(OK))\n\nresponse\n\t.status(getStatusCode('Server Error')\n\t.send('Server Error')\n```\n",
    "licenseText": "The MIT License (MIT)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/http-status-codes/-/http-status-codes-1.4.0.tgz#6e4c15d16ff3a9e2df03b89f3a55e1aae05fb477",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/http-status-codes/-/http-status-codes-1.4.0.tgz",
    "hash": "6e4c15d16ff3a9e2df03b89f3a55e1aae05fb477",
    "integrity": "sha512-JrT3ua+WgH8zBD3HEJYbeEgnuQaAnUeRRko/YojPAJjGmIfGD3KPU/asLdsLwKjfxOmQe5nXMQ0pt/7MyapVbQ==",
    "registry": "npm",
    "packageName": "http-status-codes",
    "cacheIntegrity": "sha512-JrT3ua+WgH8zBD3HEJYbeEgnuQaAnUeRRko/YojPAJjGmIfGD3KPU/asLdsLwKjfxOmQe5nXMQ0pt/7MyapVbQ== sha1-bkwV0W/zqeLfA7ifOlXhquBftHc="
  },
  "registry": "npm",
  "hash": "6e4c15d16ff3a9e2df03b89f3a55e1aae05fb477"
}