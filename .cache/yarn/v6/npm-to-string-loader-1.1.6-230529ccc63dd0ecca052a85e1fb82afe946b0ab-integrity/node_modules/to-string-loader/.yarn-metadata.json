{
  "manifest": {
    "name": "to-string-loader",
    "description": "to-string loader for webpack",
    "version": "1.1.6",
    "main": "./src/to-string.js",
    "author": {
      "name": "Gajus Kuizinas",
      "email": "gk@anuary.com",
      "url": "http://gajus.com/"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/gajus/to-string-loader"
    },
    "keywords": [
      "webpack",
      "to-string"
    ],
    "license": "BSD-3-Clause",
    "dependencies": {
      "loader-utils": "^1.0.0"
    },
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v6/npm-to-string-loader-1.1.6-230529ccc63dd0ecca052a85e1fb82afe946b0ab-integrity/node_modules/to-string-loader/package.json",
    "readmeFilename": "README.md",
    "readme": "# to-string loader for webpack\n\n## Usage\n\n```js\nlet output = require('to-string!css!sass!./my.scss');\n// => returns sass rendered to CSS a string\n```\n\nDon't forget to polyfill `require` if you want to use it in node.\n\nSee `webpack` documentation.\n\n## Use Case\n\nIf you setup a SASS loader:\n\n```js\n{\n    test: /\\.scss$/,\n    loaders: [\n        'css',\n        'sass'\n    ]\n},\n```\n\nthen `require('./my.scss')` will return an `Array` object:\n\n```\n0: Array[3]\n    0: 223\n    1: \"html,↵body,↵ol,↵ul,↵li,↵p { margin: 0; padding: 0; }↵\"\n    2: \"\"\n    length: 3\ni: (modules, mediaQuery) { .. }\nlength: 1\ntoString: toString()\n```\n\nIn some cases (e.g. Angular2 [@View styles definition](https://github.com/angular/angular/blob/2e4a2a0e5a2fb5b5c531f16db88d00423ea582fc/modules/angular2/src/core/annotations_impl/view.ts#L58)) you need to have style as a string.\n\nYou can cast the require output to a string, e.g.\n\n```js\n@View({\n    directives: [RouterOutlet, RouterLink],\n    template: require('./app.html'),\n    styles: [\n        require('./app.scss').toString()\n    ]\n})\n```\n\nor you can use `to-string` loader that will do that for you:\n\n```js\n{\n    test: /\\.scss$/,\n    loaders: [\n        'to-string',\n        'css',\n        'sass'\n    ]\n},\n```\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/to-string-loader/-/to-string-loader-1.1.6.tgz#230529ccc63dd0ecca052a85e1fb82afe946b0ab",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/to-string-loader/-/to-string-loader-1.1.6.tgz",
    "hash": "230529ccc63dd0ecca052a85e1fb82afe946b0ab",
    "integrity": "sha512-VNg62//PS1WfNwrK3n7t6wtK5Vdtx/qeYLLEioW46VMlYUwAYT6wnfB+OwS2FMTCalIHu0tk79D3RXX8ttmZTQ==",
    "registry": "npm",
    "packageName": "to-string-loader",
    "cacheIntegrity": "sha512-VNg62//PS1WfNwrK3n7t6wtK5Vdtx/qeYLLEioW46VMlYUwAYT6wnfB+OwS2FMTCalIHu0tk79D3RXX8ttmZTQ== sha1-IwUpzMY90OzKBSqF4fuCr+lGsKs="
  },
  "registry": "npm",
  "hash": "230529ccc63dd0ecca052a85e1fb82afe946b0ab"
}