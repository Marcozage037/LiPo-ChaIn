{
  "manifest": {
    "name": "vega-scenegraph",
    "version": "4.9.4",
    "description": "Vega scenegraph and renderers.",
    "license": "BSD-3-Clause",
    "author": {
      "name": "Jeffrey Heer",
      "url": "http://idl.cs.washington.edu"
    },
    "main": "build/vega-scenegraph.js",
    "module": "build/vega-scenegraph.module.js",
    "unpkg": "build/vega-scenegraph.min.js",
    "repository": {
      "type": "git",
      "url": "https://github.com/vega/vega.git"
    },
    "scripts": {
      "schema": "node schema > build/vega-scenegraph-schema.json",
      "prebuild": "rimraf build",
      "build": "rollup -c",
      "postbuild": "yarn schema",
      "pretest": "yarn build --config-test",
      "test": "tape -r ./test/__init__ 'test/**/*-test.js' && yarn xmllint",
      "xmllint": "xmllint --noout ./test/resources/svg/*.svg",
      "prepublishOnly": "yarn test && yarn build"
    },
    "dependencies": {
      "d3-path": "^2.0.0",
      "d3-shape": "^2.0.0",
      "vega-canvas": "^1.2.5",
      "vega-loader": "^4.3.3",
      "vega-scale": "^7.1.1",
      "vega-util": "^1.15.2"
    },
    "gitHead": "f262105e75449760b0f35fda70e6b576a31d68a4",
    "_registry": "npm",
    "_loc": "/home/jovyan/.cache/yarn/v6/npm-vega-scenegraph-4.9.4-468408c1e89703fa9d3450445daabff623de2757-integrity/node_modules/vega-scenegraph/package.json",
    "readmeFilename": "README.md",
    "readme": "# vega-scenegraph\n\n[Vega](https://github.com/vega/vega) scenegraph and renderers.\n\nRenderers and event handlers for Vega's mark-based scenegraph. This package supports both pixel-based (canvas) and vector graphics (SVG) output. Renderers can either (re-)draw a complete scene or perform incremental re-rendering for a set of provided \"dirty\" items. A fast SVG string renderer is also provided to generate static SVG for export.\n\nThe [node-canvas](https://github.com/Automattic/node-canvas) library is used for server-side canvas rendering and bounds calculation. Node-canvas requires the native Cairo graphics library and may attempt to compile native code as part of the installation process. In some instances this may result in installation hiccups. Should you run into issues, you are likely to resolve them more quickly if you first search for help regarding node-canvas (as opposed to vega-scenegraph) installation. However, node-canvas is not a strict dependency, and is not needed for SVG rendering. Bounds calculation can be performed without node-canvas, though in the case of text marks the resulting bounds may be inaccurate due to approximate text size calculations.\n\n## Scenegraph Definition\n\nThe Vega scenegraph is a hierarchical (tree) data structure. The levels of the tree alternate between an enclosing *mark* definition and contained sets of mark instances called *items*.\n\nFor example, here is a simple scenegraph containing three rectangles:\n\n```json\n{\n  \"marktype\": \"rect\",\n  \"items\": [\n    {\"x\": 0, \"y\": 0, \"width\": 50, \"height\": 50, \"fill\": \"steelblue\"},\n    {\"x\": 100, \"y\": 50, \"width\": 50, \"height\": 50, \"fill\": \"firebrick\"},\n    {\"x\": 50, \"y\": 100, \"width\": 50, \"height\": 50, \"fill\": \"forestgreen\"}\n  ]\n}\n```\n\nThe supported mark types are rectangles (`rect`), plotting symbols (`symbol`), general paths or polygons (`path`), circular arcs (`arc`), filled areas (`area`), lines (`line`), images (`image`), text labels (`text`), and chart gridlines or rules (`rule`). Each item has a set of supported properties (`x`, `y`, `width`, `fill`, and so on) appropriate to the mark type.\n\nScenegraphs may also contain `group` marks, which serve as containers for other marks. For example, a top-level group mark may look like:\n\n```json\n{\n  \"marktype\": \"group\",\n  \"items\": [\n    {\n      \"x\": 0,\n      \"y\": 0,\n      \"width\": 200,\n      \"height\": 200,\n      \"items\": [...] // array of contained mark instances\n    }\n  ]\n}\n```\n\nIn this example, the group *mark* contains only a single group *item*. In practice, a group mark may contain any number of group items, for example to describe a scene with multiple layers or sub-plots.\n\nFor more information regarding supported mark properties, please see the [Vega marks documentation](https://vega.github.io/vega/docs/marks/).\n\n## Scenegraph Serialization\n\nThe top-level export of this package includes `fromJSON` and `toJSON` methods to support scenegraph serialization. The `fromJSON` method expects a JSON string as input (similar to the examples listed above). It will then add additional parent pointers to the tree structure. For example, each item will have a `mark` property pointing to its parent mark, and each mark will have a `group` property pointing to its parent group (if any). The `toJSON` method maps a scenegraph instance to a JSON string, stripping any parent pointers or other non-standard properties.\n\n## Test Suite\n\nThe vega-scengraph test suite compares rendered output for both Canvas (PNG) and SVG (text) renderers. Due to differences among platforms, pixel-level rendering by node-canvas can differ across operating systems. As a result, some test cases may break when running on a system other than Mac OS X (our standard platform for testing). If you are running on Linux or Windows and experience test failures, it does not necessarily indicate an issue with vega-scenegraph. In such cases, we recommend running the node-canvas test-server (`npm run test-server` from the node-canvas repository) to compare server-side and client-side rendering.\n",
    "licenseText": "Copyright (c) 2015-2018, University of Washington Interactive Data Lab\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n  may be used to endorse or promote products derived from this software\n  without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/vega-scenegraph/-/vega-scenegraph-4.9.4.tgz#468408c1e89703fa9d3450445daabff623de2757",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/vega-scenegraph/-/vega-scenegraph-4.9.4.tgz",
    "hash": "468408c1e89703fa9d3450445daabff623de2757",
    "integrity": "sha512-QaegQzbFE2yhYLNWAmHwAuguW3yTtQrmwvfxYT8tk0g+KKodrQ5WSmNrphWXhqwtsgVSvtdZkfp2IPeumcOQJg==",
    "registry": "npm",
    "packageName": "vega-scenegraph",
    "cacheIntegrity": "sha512-QaegQzbFE2yhYLNWAmHwAuguW3yTtQrmwvfxYT8tk0g+KKodrQ5WSmNrphWXhqwtsgVSvtdZkfp2IPeumcOQJg== sha1-RoQIweiXA/qdNFBEXaq/9iPeJ1c="
  },
  "registry": "npm",
  "hash": "468408c1e89703fa9d3450445daabff623de2757"
}